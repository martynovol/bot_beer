from telnetlib import KERMIT
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram import types, Dispatcher
from aiogram.dispatcher.filters import Text
from aiogram.types import CallbackQuery, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove, InlineKeyboardMarkup, \
    InlineKeyboardButton

from create_bot import dp, bot

from database import sqlite_db

from keyboards import admin_kb, admin_cancel_kb, cassier_kb, mod_kb, kb_client, main_cassier_kb

from datetime import datetime
from datetime import date, timedelta

from handlers import inf
from handlers import emoji_bot

import emoji

b1 = KeyboardButton('–û—Ç—á—ë—Ç—ã')
b2 = KeyboardButton('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏')
b3 = KeyboardButton('–ó–∞—Ä–ø–ª–∞—Ç—ã')
b4 = KeyboardButton('–¢–æ—á–∫–∏')
b5 = KeyboardButton('–†–∞—Å—Ö–æ–¥—ã')
button_case_mod = ReplyKeyboardMarkup(resize_keyboard=True).add(b1).insert(b2).add(b3).insert(b4).insert(b5)


async def menu_reports(message: types.Message):
    bp = KeyboardButton(f'–ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç—á—ë—Ç–æ–≤')
    bn = KeyboardButton(f'–í—ã–≥—Ä—É–∑–∫–∞ –æ—Ç—á—ë—Ç–æ–≤')
    bt = KeyboardButton(f'–ó–∞–¥–∞—á–∏')
    b5 = KeyboardButton(f'–°–ø–∏—Å–∞–Ω–∏—è')
    b6 = KeyboardButton(f'–ü–ª–∞–Ω—ã –ø—Ä–æ–¥–∞–∂')
    b7 = KeyboardButton(f'–†–µ–≤–∏–∑–∏–∏')
    b9 = KeyboardButton(f'–ò–Ω–∫–∞—Å—Å–∞—Ü–∏–∏')
    b8 = KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è')
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(bp).insert(bn).insert(bt).row(b5).insert(b6).insert(b7).row(b9).row(b8)
    await bot.send_message(message.from_user.id, '–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –º–µ–Ω—é <<–û—Ç—á—ë—Ç—ã>>', reply_markup=keyboard)


async def menu_reports_load(message: types.Message):
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    b1 = KeyboardButton(f'{emoji_bot.em_report_for_day}–í—ã–≥—Ä—É–∑–∏—Ç—å –æ—Ç—á—ë—Ç –∑–∞ –¥–µ–Ω—å')
    b3 = KeyboardButton(f'{emoji_bot.em_report_for_diap}–í—ã–≥—Ä—É–∑–∏—Ç—å –¥–∏–∞–ø–∞–∑–æ–Ω')
    b7 = KeyboardButton('–ü—Ä–æ–±–ª–µ–º—ã')
    b4 = KeyboardButton('–ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü—É')
    b5 = KeyboardButton('–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–∞–±–ª–∏—Ü—É')
    b2 = KeyboardButton(f'{emoji_bot.em_report_for_month}–í—ã–≥—Ä—É–∑–∏—Ç—å –≤—ã—Ä—É—á–∫—É –∑–∞ –º–µ—Å—è—Ü')
    if message.from_user.id in inf.get_mod_id():
        b6 = KeyboardButton('–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –û–ü–£')
        keyboard.add(b1).insert(b2).row(b3).insert(b7).row(b4).insert(b5).row(b6)
    else:
        keyboard.add(b1).insert(b3).row(b7).insert(b4).row(b5).insert(b2)
    b8 = KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è')
    keyboard.row(b8)
    await bot.send_message(message.from_user.id, '–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –º–µ–Ω—é <<–í—ã–≥—Ä—É–∑–∫–∞ –æ—Ç—á—ë—Ç–æ–≤>>', reply_markup=keyboard)


async def menu_incassation_load(message: types.Message):
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    b1 = KeyboardButton(f'–ò–Ω–∫–∞—Å—Å–∏—Ä–æ–≤–∞—Ç—å')
    b2 = KeyboardButton(f'–ù–µ–ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω–Ω—ã–µ –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏')
    #b3 = KeyboardButton(f'–í—Å–µ –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏')

    b8 = KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è')
    keyboard.add(b1).row(b2).row(b8)
    await bot.send_message(message.from_user.id, '–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –º–µ–Ω—é <<–ò–Ω–∫–∞—Å—Å–∞—Ü–∏–∏>>', reply_markup=keyboard)


async def menu_users(message: types.Message):
    b1 = KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
    b2 = KeyboardButton('–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π')
    b3 = KeyboardButton('–ù–∞–ø–∏—Å–∞—Ç—å')
    b5 = KeyboardButton(f'{emoji_bot.em_report_load_zamena}–ü—Ä–æ–≤–µ—Å—Ç–∏ –∑–∞–º–µ–Ω—É')
    b4 = KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è')
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(b1).insert(b2).row(b3).insert(b5).row(b4)
    await bot.send_message(message.from_user.id, '–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –º–µ–Ω—é <<–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏>>', reply_markup=keyboard)


async def menu_salary(message: types.Message):
    b1 = KeyboardButton(f'{emoji_bot.em_salary_button}–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –∑–∞—Ä–ø–ª–∞—Ç—É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞')
    b2 = KeyboardButton('–ù–∞–∑–Ω–∞—á–∏—Ç—å —Å—Ç–∞–≤–∫—É')
    b3 = KeyboardButton(f'{emoji_bot.em_fine_button}–û—à—Ç—Ä–∞—Ñ–æ–≤–∞—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞')
    b4 = KeyboardButton(f'{emoji_bot.em_my_salary}–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –º–æ—é –∑–∞—Ä–ø–ª–∞—Ç—É –∑–∞ —ç—Ç–æ—Ç –º–µ—Å—è—Ü')
    b5 = KeyboardButton(f'–ù–∞—á–∏—Å–ª–∏—Ç—å –∑–∞—Ä–ø–ª–∞—Ç—É')
    b6 = KeyboardButton(f'–î–æ–ª–≥–∏ –ø–æ –≤—ã–ø–ª–∞—Ç–∞–º')
    b7 = KeyboardButton(f'–°—Ç–∞–≤–∫–∏')
    b8 = KeyboardButton(f'–ù–∞–∑–Ω–∞—á–∏—Ç—å –ø—Ä–µ–º–∏—é')
    bn = KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è')
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(b1).insert(b2).row(b3).insert(b4).row(b5).insert(b6).row(b7).insert(b8).row(bn)
    await bot.send_message(message.from_user.id, '–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –º–µ–Ω—é <<–ó–∞—Ä–ø–ª–∞—Ç—ã>>', reply_markup=keyboard)


async def menu_invoices(message: types.Message):
    b1 = KeyboardButton('–ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–∞–∫–ª–∞–¥–Ω—É—é')
    b2 = KeyboardButton('–í—ã–≥—Ä—É–∑–∏—Ç—å –Ω–∞–∫–ª–∞–¥–Ω—ã–µ')
    b3 = KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è')
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(b1).row(b2).row(b3)
    await bot.send_message(message.from_user.id, '–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –º–µ–Ω—é <<–ù–∞–∫–ª–∞–¥–Ω—ã–µ>>', reply_markup=keyboard)


async def points(message: types.Message):
    b1 = KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å —Ç–æ—á–∫—É')
    b2 = KeyboardButton('–°–ø–∏—Å–æ–∫ —Ç–æ—á–µ–∫')
    b3 = KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è')
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(b1).row(b2).row(b3)
    await bot.send_message(message.from_user.id, '–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –º–µ–Ω—é <<–ù–∞–∫–ª–∞–¥–Ω—ã–µ>>', reply_markup=keyboard)


async def in_main_menu(message: types.Message):
    await bot.send_message(message.from_user.id, '–í–µ—Ä–Ω—É—Ç—å—Å—è', reply_markup=inf.kb(message.from_user.id))


async def menu_reports_up(message: types.Message):
    b1 = KeyboardButton(f'{emoji_bot.em_report_close}–û—Ç–∫—Ä—ã—Ç—å —Å–º–µ–Ω—É')
    b2 = KeyboardButton(f'{emoji_bot.em_report_close}–ó–∞–∫—Ä—ã—Ç—å —Å–º–µ–Ω—É')
    b3 = KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è')
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(b1).row(b2)

    if message.from_user.id not in inf.get_mod_id():
        open_report = False
        for ret in sqlite_db.cur.execute('SELECT close FROM manager_report WHERE close = ? AND person_id = ?', ["0", message.from_user.id]):
            open_report = True
        if open_report:
            keyboard.row(KeyboardButton(f"{emoji_bot.em_report_close}–ó–∞–∫—Ä—ã—Ç—å —Å–º–µ–Ω—É —É–ø—Ä–∞–≤–ª—è—é—â–µ–≥–æ"))
        else:
            keyboard.row(KeyboardButton(f"{emoji_bot.em_report_close}–û—Ç–∫—Ä—ã—Ç—å —Å–º–µ–Ω—É —É–ø—Ä–∞–≤–ª—è—é—â–µ–≥–æ"))

    keyboard.row(b3)
    await bot.send_message(message.from_user.id, '–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –º–µ–Ω—é <<–ó–∞–≥—Ä—É–∑–∫–∏ –æ—Ç—á—ë—Ç–æ–≤>>', reply_markup=keyboard)


async def menu_tasks(message: types.Message):
    b1 = KeyboardButton(f'üìî–ù–∞–∑–Ω–∞—á–∏—Ç—å –∑–∞–¥–∞—á—É')
    b2 = KeyboardButton(f'üìî–°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á')
    b3 = KeyboardButton(f'üìî–ú–æ–∏ –∑–∞–¥–∞—á–∏')
    b4 = KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è')
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(b1).insert(b2).row(b3).row(b4)
    await bot.send_message(message.from_user.id, '–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –º–µ–Ω—é <<–ó–∞–¥–∞—á–∏>>', reply_markup=keyboard)


async def exp_kb(message: types.Message):
    b1 = KeyboardButton(f'–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ä–∞—Å—Ö–æ–¥–æ–≤')
    b2 = KeyboardButton(f'–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤—ã–ø–ª–∞—Ç')
    b4 = KeyboardButton(f'–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤—ã–ø–ª–∞—Ç')
    b3 = KeyboardButton(f'–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤')
    b5 = KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è')
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(b1).insert(b2).row(b3).insert(b4).row(b5)
    await bot.send_message(message.from_user.id, '–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –º–µ–Ω—é <<–†–∞—Å—Ö–æ–¥—ã>>', reply_markup=keyboard)


async def menu_loss(message: types.Message):
    b1 = KeyboardButton('üìù–î–æ–±–∞–≤–∏—Ç—å —Å–ø–∏—Å–∞–Ω–∏–µ')
    b2 = KeyboardButton('üìù–í—ã–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–∞–Ω–∏—è')
    b3 = KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è')
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(b1).row(b2).row(b3)
    await bot.send_message(message.from_user.id, '–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –º–µ–Ω—é <<–°–ø–∏—Å–∞–Ω–∏—è>>', reply_markup=keyboard)


async def menu_plans(message: types.Message):
    b1 = KeyboardButton('üìî–°–æ–∑–¥–∞—Ç—å –ø–ª–∞–Ω –ø—Ä–æ–¥–∞–∂')
    b2 = KeyboardButton('üìî–ü–ª–∞–Ω –ø—Ä–æ–¥–∞–∂')
    b4 = KeyboardButton("üìî–ù–∞—á–∏—Å–ª–∏—Ç—å –ø—Ä–µ–º–∏–∏ –ø–æ –ø–ª–∞–Ω–∞–º")
    b5 = KeyboardButton("üìî–¢–∞–±–ª–∏—Ü–∞ —Å –ø–ª–∞–Ω–æ–º")
    b3 = KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è')
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(b1).insert(b2).row(b4).insert(b5).row(b3)
    await bot.send_message(message.from_user.id, '–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –º–µ–Ω—é <<–ü–ª–∞–Ω—ã –ø—Ä–æ–¥–∞–∂>>', reply_markup=keyboard)


async def rev_kb(message: types.Message):
    b1 = KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å —Ä–µ–≤–∏–∑–∏—é')
    b2 = KeyboardButton('–í—ã–≥—Ä—É–∑–∏—Ç—å —Ä–µ–≤–∏–∑–∏–∏')
    b4 = KeyboardButton(f'üìí–õ–æ–∫–∞–ª—å–Ω–∞—è —Ä–µ–≤–∏–∑–∏—è')
    b5 = KeyboardButton(f'üìí–ü–æ–ª—É—á–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—É—é —Ä–µ–≤–∏–∑–∏—é') 
    b6 = KeyboardButton(f'–í—ã–≥—Ä—É–∑–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É')
    b3 = KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è')
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(b1).insert(b2).row(b4).insert(b6).row(b5).row(b3)
    await bot.send_message(message.from_user.id, '–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –º–µ–Ω—é <<–†–µ–≤–∏–∑–∏–∏>>', reply_markup=keyboard)


def register_handlers_mod_kb(dp: Dispatcher):
    dp.register_message_handler(menu_tasks, Text(equals='–ó–∞–¥–∞—á–∏', ignore_case=True), state=None)
    dp.register_message_handler(menu_reports_up, Text(equals='–ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç—á—ë—Ç–æ–≤', ignore_case=True), state=None)
    dp.register_message_handler(menu_reports, Text(equals='–û—Ç—á—ë—Ç—ã', ignore_case=True), state=None)
    dp.register_message_handler(menu_users, Text(equals='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏', ignore_case=True), state=None)
    dp.register_message_handler(menu_salary, Text(equals='–ó–∞—Ä–ø–ª–∞—Ç—ã', ignore_case=True), state=None)
    dp.register_message_handler(menu_loss, Text(equals='–°–ø–∏—Å–∞–Ω–∏—è', ignore_case=True), state=None)
    dp.register_message_handler(menu_plans, Text(equals='–ü–ª–∞–Ω—ã –ø—Ä–æ–¥–∞–∂', ignore_case=True), state=None)
    dp.register_message_handler(menu_invoices, Text(equals='–ù–∞–∫–ª–∞–¥–Ω—ã–µ', ignore_case=True), state=None)
    dp.register_message_handler(in_main_menu, Text(equals='–í–µ—Ä–Ω—É—Ç—å—Å—è', ignore_case=True), state=None)
    dp.register_message_handler(menu_incassation_load, Text(equals='–ò–Ω–∫–∞—Å—Å–∞—Ü–∏–∏', ignore_case=True), state=None)
    dp.register_message_handler(points, Text(equals='–¢–æ—á–∫–∏', ignore_case=True), state=None)
    dp.register_message_handler(menu_reports_load, Text(equals='–í—ã–≥—Ä—É–∑–∫–∞ –æ—Ç—á—ë—Ç–æ–≤', ignore_case=True), state=None)
    dp.register_message_handler(exp_kb, Text(equals='–†–∞—Å—Ö–æ–¥—ã', ignore_case=True), state=None)
    dp.register_message_handler(rev_kb, Text(equals='–†–µ–≤–∏–∑–∏–∏', ignore_case=True), state=None)